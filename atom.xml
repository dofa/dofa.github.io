<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Do Far]]></title>
  <link href="http://blog.dofa.org/atom.xml" rel="self"/>
  <link href="http://blog.dofa.org/"/>
  <updated>2014-04-03T15:22:45+00:00</updated>
  <id>http://blog.dofa.org/</id>
  <author>
    <name><![CDATA[dofa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JavaScript DOM cheat sheet]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/04/javascript-dom-cheat-sheet/"/>
    <updated>2014-04-04T06:02:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/04/javascript-dom-cheat-sheet</id>
    <content type="html"><![CDATA[<p><img src="http://dofa.u.qiniudn.com/image/web/JavaScript-DOM-Cheatsheet.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之screen对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/04/learn-javascript-bom-base-screen-object/"/>
    <updated>2014-04-04T04:57:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/04/learn-javascript-bom-base-screen-object</id>
    <content type="html"><![CDATA[<p>screen对象用于获取用户的屏幕信息</p>

<h2>Screen对象</h2>

<ul>
<li><code>Screen</code>对象是<code>window</code>对象的属性</li>
</ul>


<h2>Screen对象属性</h2>

<ul>
<li><code>JavaScript</code> <code>availHeight</code> 属性 &mdash;  窗口可以使用的屏幕高度，单位像素</li>
<li><code>JavaScript</code> <code>availWidth</code> 属性  &mdash;  窗口可以使用的屏幕宽度，单位像素</li>
<li><code>JavaScript</code> <code>colorDepth</code> 属性  &mdash;  用户浏览器表示的颜色位数，通常为32位(每像素的位数)</li>
<li><code>JavaScript</code> <code>pixelDepth</code> 属性  &mdash;  用户浏览器表示的颜色位数，通常为32位(每像素的位数)（<code>IE</code>不支持此属性）</li>
<li><code>JavaScript</code> <code>height</code> 属性  &mdash;  屏幕的高度，单位像素</li>
<li><code>JavaScript</code> <code>width</code> 属性   &mdash;  屏幕的宽度，单位像素</li>
</ul>


<p><code>availWidth</code>与<code>availHeight</code>属性非常有用，例如：可以使用下面的代码填充用户的屏幕：</p>

<pre><code>window.moveTo(0,0);
window.resizeTo(screen.availWidth, screen.availHeight);
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之navigator对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/04/learn-javascript-bom-base-navigator-object/"/>
    <updated>2014-04-04T04:52:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/04/learn-javascript-bom-base-navigator-object</id>
    <content type="html"><![CDATA[<p>navigator对象通常用于检测浏览器与操作系统的版本</p>

<h2>Navigator对象</h2>

<ul>
<li><code>navigator</code>对象是<code>window</code>对象的属性</li>
<li>由于<code>navigator</code>没有统一的标准，因此各个浏览器都有自己不同的<code>navigator</code>版本，这里只介绍最普遍支持且最常用的</li>
</ul>


<h2>常用的navigator属性</h2>

<ul>
<li><code>appCodeName</code> &mdash;  浏览器代码名的字符串表示</li>
<li><code>appName</code> &mdash;  官方浏览器名的字符串表示</li>
<li><code>appVersion</code>  &mdash;  浏览器版本信息的字符串表示</li>
<li><code>cookieEnabled</code>   &mdash;  如果启用<code>cookie</code>返回<code>true</code>，否则返回<code>false</code></li>
<li><code>javaEnabled</code> &mdash;  如果启用<code>java</code>返回<code>true</code>，否则返回<code>false</code></li>
<li><code>platform</code>    &mdash;  浏览器所在计算机平台的字符串表示</li>
<li><code>plugins</code> &mdash;  安装在浏览器中的插件数组</li>
<li><code>taintEnabled</code>    &mdash;  如果启用了数据污点返回<code>true</code>，否则返回<code>false</code></li>
<li><code>userAgent</code>   &mdash;  用户代理头的字符串表示</li>
</ul>


<p><code>navigator</code>中最重要的是<code>userAgent</code>属性，返回包含浏览器版本等信息的字符串，其次<code>cookieEnabled</code>也很重要，使用它可以判断用户浏览器是否开启<code>cookie</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之location对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/learn-javascript-bom-base-location-object/"/>
    <updated>2014-04-03T06:10:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/learn-javascript-bom-base-location-object</id>
    <content type="html"><![CDATA[<p>Location用于获取或设置窗体的URL，并且可以用于解析URL，是BOM中最重要的对象之一</p>

<h2>Location对象</h2>

<ul>
<li><code>Location</code>既是<code>window</code>对象的属性又是<code>document</code>对象的属性</li>
<li><code>location</code>包含8个属性，其中7个都是当前窗体的<code>URL</code>的一部分，剩下的也是最重要的一个是<code>href</code>属性，代表当前窗体的<code>URL</code></li>
<li><code>location</code>的8个属性都是可读写的，但是只有<code>href</code>与<code>hash</code>的写才有意义。例如改变<code>location.href</code>会重新定位到一个<code>URL</code>，而修改<code>location.hash</code>会跳到当前页面中的<code>anchor(&lt;a id="name"&gt;</code>或者<code>&lt;div id="id"&gt;</code>等)名字的标记(如果有)，而且页面不会被重新加载</li>
</ul>


<h2>示例</h2>

<pre><code>document.write(window.location==document.location);
</code></pre>

<h2>Location对象属性图示</h2>

<p><img src="http://dofa.u.qiniudn.com/image/web/window_location.png"></p>

<p>location属性</p>

<ul>
<li><code>JavaScript</code> <code>hash</code> 属性    &mdash;  返回<code>URL</code>中<code>#</code>符号后面的内容</li>
<li><code>JavaScript</code> <code>host</code> 属性    &mdash;  返回域名</li>
<li><code>JavaScript</code> <code>hostname</code> 属性    &mdash;  返回主域名</li>
<li><code>JavaScript</code> <code>href</code> 属性    &mdash;  返回当前文档的完整<code>URL</code>或设置当前文档的<code>URL</code></li>
<li><code>JavaScript</code> <code>pathname</code> 属性    &mdash;  返回<code>URL</code>中域名后的部分</li>
<li><code>JavaScript</code> <code>port</code> 属性    &mdash;  返回<code>URL</code>中的端口</li>
<li><code>JavaScript</code> <code>protocol</code> 属性    &mdash;  返回<code>URL</code>中的协议</li>
<li><code>JavaScript</code> <code>search</code> 属性  &mdash;  返回<code>URL</code>中的查询字符串</li>
<li><code>JavaScript</code> <code>assign()</code>   函数 &mdash;   设置当前文档的<code>URL</code></li>
<li><code>JavaScript</code> <code>replace()</code> 函数 &mdash;    设置当前文档的<code>URL</code>，并在<code>history</code>对象的地址列表中删除这个<code>URL</code></li>
<li><code>JavaScript</code> <code>reload()</code>   函数 &mdash;   重新载入当前文档(从<code>server</code>服务器端)</li>
<li><code>JavaScript</code> <code>toString()</code> 函数 &mdash;   返回<code>location</code>对象<code>href</code>属性当前的值</li>
</ul>


<p>Note: 主域名是不带www的域名，例如dreamdu.com，主域名前面带前缀的通常都为二级域名或多级域名，例如www.dreamdu.com其实是二级域名。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之history对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/learn-javascript-bom-base-history-object/"/>
    <updated>2014-04-03T06:00:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/learn-javascript-bom-base-history-object</id>
    <content type="html"><![CDATA[<p>History用于窗体中的导航</p>

<h2>History对象</h2>

<ul>
<li><code>history</code>对象是<code>window</code>对象的属性</li>
<li>浏览者通常可以使用浏览器的前进与后退按钮访问曾经浏览过的页面。<code>JavaScript</code>的<code>history</code>对象记录了用户曾经浏览过的页面，并可以实现浏览器前进与后退相似的导航功能</li>
<li>可以通过<code>back</code>函数后退一个页面，<code>forward</code>函数前进一个页面，或者使用<code>go</code>函数任意后退或前进页面，还可以通过<code>length</code>属性查看<code>history</code>对象中存储的页面数</li>
</ul>


<h2>History对象函数</h2>

<ul>
<li><code>JavaScript</code> <code>history.go()</code> 函数 &mdash; 前进或后退指定的页面数</li>
<li><code>JavaScript</code> <code>history.back()</code> 函数 &mdash; 后退一页</li>
<li><code>JavaScript</code> <code>history.forward()</code> 函数 &mdash; 前进一页</li>
</ul>


<h2>History对象属性</h2>

<ul>
<li><code>JavaScript</code> <code>length</code> 属性 &mdash; <code>history</code>对象中缓存了多少个<code>URL</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之frames对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/learn-javascript-bom-base-frames-object/"/>
    <updated>2014-04-03T05:35:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/learn-javascript-bom-base-frames-object</id>
    <content type="html"><![CDATA[<p>Frames用于表现HTML页面当前窗体的中的框架集合</p>

<h2>Frames对象</h2>

<ul>
<li><code>frames</code>对象是<code>window</code>对象的属性</li>
<li>如果页面使用框架，将产生一个框架集合<code>frames</code>，在集合中可用数字(从0开始，从左到右，逐行索引)或名字索引框架</li>
</ul>


<h2>框架集引用中使用的对象</h2>

<table>
<thead>
<tr>
<th align="left">对象 </th>
<th align="left"> 位置</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">window </td>
<td align="left"> 当前框架</td>
</tr>
<tr>
<td align="left">top </td>
<td align="left"> 最顶层的框架，就是浏览器窗体</td>
</tr>
<tr>
<td align="left">parent </td>
<td align="left"> 包含当前框架的父框架</td>
</tr>
<tr>
<td align="left">self </td>
<td align="left"> 当前框架，总是等于window对象</td>
</tr>
</tbody>
</table>


<h2>示例</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;frameset</span> <span class="na">rows=</span><span class="s">&quot;20%, *, 20%&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;frame</span> <span class="na">src=</span><span class="s">&quot;http://www.dreamdu.com/javascript/exe_window.frames.top/&quot;</span> <span class="na">name=</span><span class="s">&quot;top&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;frameset</span> <span class="na">cols=</span><span class="s">&quot;20%, *&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;frame</span> <span class="na">src=</span><span class="s">&quot;http://www.dreamdu.com/javascript/exe_window.frames.top/&quot;</span> <span class="na">name=</span><span class="s">&quot;left&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;frame</span> <span class="na">src=</span><span class="s">&quot;http://www.dreamdu.com/javascript/exe_window.frames.right/&quot;</span> <span class="na">name=</span><span class="s">&quot;right&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/frameset&gt;</span>
</span><span class='line'>        <span class="nt">&lt;frame</span> <span class="na">src=</span><span class="s">&quot;http://www.dreamdu.com/javascript/exe_window.frames.top/&quot;</span> <span class="na">name=</span><span class="s">&quot;bottom&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/frameset&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的框架页示例产生了一个框架集</p>

<p><code>window</code>与<code>self</code>代表相同的对象，但是<code>self</code>是为了确定正在使用的框架不是<code>parent</code>，而是自身,<code>top</code>对象代表最顶层框架，浏览器窗体本身，因此在这个例子中就等于<code>window</code>对象,如果页面上没有框架，<code>window</code>，<code>self</code>都等于<code>top</code>，并且框架集合的长度为0</p>

<p>如果框架名称为<code>right</code>的页面包括下面框架：</p>

<p>&lt;% raw %></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;frameset</span> <span class="na">cols=</span><span class="s">&quot;50%, *&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;frame</span> <span class="na">src=</span><span class="s">&quot;http://www.dreamdu.com/javascript/exe_window.frames.top/&quot;</span> <span class="na">name=</span><span class="s">&quot;righttop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;frame</span> <span class="na">src=</span><span class="s">&quot;http://www.dreamdu.com/javascript/exe_window.frames.top/&quot;</span> <span class="na">name=</span><span class="s">&quot;rightbottom&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/frameset&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&lt;% endraw %></p>

<p>那么righttop与rightbottom的parent父框架为right</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript Dom Use]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/javascript-dom-use/"/>
    <updated>2014-04-03T00:00:00+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/javascript-dom-use</id>
    <content type="html"><![CDATA[<p>JavaScript DOM基础操作实例</p>

<p>文档对象模型(Document Object Model)，通常简称为DOM，是网站内容与JavaScript互通的接口。自JavaScript成为最常用的语言时JavaScript和DOM通常被视为独立的实体。DOM接口用于存取、遍历和控制HTML和XML文档。下面我们将简单的介绍一些JavaScript DOM的基本操作实例，包括建立、增加、删除、克隆、访问节点等等。</p>

<h2>getElementById(id)</h2>

<p>这是通过<code>id</code>来访问某一元素，最常用的之一，例：</p>

<pre><code>&lt;html&gt; 
         &lt;body&gt; 
         &lt;div id="myid"&gt; 
         test  
         &lt;/div&gt; 
         &lt;script language="javascript"&gt; 
         alert(document.getElementById("myid").innerHTML);  
         &lt;/script&gt; 
         &lt;/body&gt; 
&lt;/html&gt; 
</code></pre>

<p>注意点：如果元素的<code>ID</code>不是唯一，则会取得第一个该<code>ID</code>名称的元素。</p>

<h2>getElementsByName(name)</h2>

<p>这是通过<code>name</code>来取得某一堆元素（作为数组），看 <code>Element</code>后面有个小<code>s</code>就知道了，<code>ID</code>是<code>HTML</code>文档中要求唯一的，<code>name</code>可以不是唯一，如<code>checkbox</code>、<code>radio</code>等地方会用到多个<code>input</code>用同一个<code>name</code>来识别是否为同党。对了，<code>getElementsByName(name)</code>仅用于取得<code>input</code>、<code>radio</code>、 <code>checkbox</code>等元素，如</p>

<pre><code>&lt;input name="myradio" type="radio" /&gt;。
</code></pre>

<h2>getElementsByTagName(tagname)</h2>

<p>看这方法就知道这也是取得某一堆元素（作为数组），是通过<code>TagName</code>也就是标签名来取得。你可以遍历这个数组获得每一个单独的元素。当一个<code>DOM</code>结构很大时，可以通过它来有效地缩小搜查范围。</p>

<pre><code>&lt;html&gt;           
     &lt;head&gt; 
     &lt;script&gt; 
     function test() {  
     testall=document.getElementsByTagName("body");  
     testbody=testall.item(0); //获得所有tagName是body的元素（当然每个页面只有一个）  
     testall=testbody.getElementsByTagName("p");// 获得body子元素种的所有P元素  
     testnode=testall.item(1); // 获得第二个P元素           
     alert(testnode.firstChild.nodeValue); //显示这个元素的文本         }  
     &lt;/script&gt; 
     &lt;/head&gt; 
     &lt;body&gt; 
     &lt;p&gt;hi&lt;/p&gt; 
     &lt;p&gt;hello&lt;/p&gt; 
     &lt;script language="javascript"&gt; 
     test();  
     &lt;/script&gt; 
     &lt;/body&gt; 
&lt;/html&gt; 
</code></pre>

<h2>appendChild(node)</h2>

<p>向当前的元素（应该叫对象比较恰当）追加节点。</p>

<pre><code>&lt;html&gt; 
     &lt;body&gt; 
     &lt;head&gt; 
     &lt;/head&gt; 
     &lt;div id="test"&gt;&lt;/div&gt; 
     &lt;script type="text/javascript"&gt; 
     var newdiv=document.createElement("div")  
     var newtext=document.createTextNode("A new div")           
     newdiv.appendChild(newtext)  
     document.getElementById("test").appendChild(newdiv)  
     &lt;/script&gt; 
     &lt;/body&gt; 
&lt;/html&gt; 
</code></pre>

<p>刚才我在第一个例子中为了显示出内容，用了<code>innerHTML</code>，刚才看到文章才得知<code>innerHTMl</code>不属于<code>DOM</code>。</p>

<h2>removeChild(childreference)</h2>

<p>删除当前节点的子节点，返回被删除的节点。这个被删除的节点可以被插入到别的地方。</p>

<pre><code>&lt;html&gt; 
     &lt;body&gt; 
     &lt;div id="parent"&gt;&lt;div id="child"&gt;A child&lt;/div&gt;&lt;/div&gt; 
     &lt;script language="javascript"&gt; 
     var childnode=document.getElementById("child")  
     var removednode=document.getElementById("parent").removeChild(childnode)  
     &lt;/script&gt; 
     &lt;/body&gt; 
&lt;/html&gt; 
</code></pre>

<h2>cloneNode(deepBoolean)</h2>

<p>复制并返回当前节点的复制节点，复制节点是一个孤立节点，它复制了原节点的属性，在把这个新节点加入到<code>document</code>前，根据需要修改<code>ID</code>属性确保其<code>ID</code>的唯一。这个方法支持一个布尔参数，当<code>deepBoolean</code>设置<code>true</code>时，复制当前节点的所有子节点，包括该节点内的文本。</p>

<pre><code>&lt;html&gt; 
     &lt;body&gt; 
     &lt;p id="mynode"&gt;test&lt;/p&gt; 
     &lt;script language="javascript"&gt; 
     p=document.getElementById("mynode")   
    ppclone = p.cloneNode(true);  
     p.parentNode.appendChild(pclone);  
     &lt;/script&gt; 
     &lt;/body&gt; 
&lt;/html&gt; 
</code></pre>

<h2>replaceChild(newChild, oldChild)</h2>

<p>把当前节点的一个子节点换成另一个节点。</p>

<pre><code>&lt;html&gt; 
     &lt;body&gt; 
     &lt;div id="mynode2"&gt; 
     &lt;span id="orispan"&gt;span&lt;/span&gt; 
     &lt;/div&gt; 
     &lt;script language="javascript"&gt; 
     var orinode=document.getElementById("orispan");  
     var newnode=document.createElement("p");  
     var text=document.createTextNode("test ppp ");  
     newnode.appendChild(text);  
     document.getElementById("mynode2").replaceChild(newnode, orinode);  
     &lt;/script&gt; 
     &lt;/body&gt; 
&lt;/html&gt; 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之document对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/01/learn-javascript-bom-base-document-object/"/>
    <updated>2014-04-01T15:35:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/01/learn-javascript-bom-base-document-object</id>
    <content type="html"><![CDATA[<p>Document用于表现HTML页面当前窗体的内容</p>

<h2>Document对象</h2>

<ul>
<li><code>document</code>是<code>BOM</code>中最重要对象之一</li>
<li><code>document</code>对象是<code>window</code>对象的属性</li>
<li><code>document</code>对象包含一个节点对象，此对象包含每个单独页面的所有<code>HTML</code>元素，这就是W3C的<code>DOM</code>对象</li>
</ul>


<h2>Document属性</h2>

<ul>
<li><code>cookie</code> &mdash;   用户<code>cookie</code></li>
<li><code>title</code>   &mdash;  当前页面<code>title</code>标签中定义的文字</li>
<li><code>URL</code> &mdash;  当前页面的<code>URL</code></li>
</ul>


<p>下面内容的不建议使用</p>

<ul>
<li><code>alinkColor</code>  &mdash;  代表<code>HTML body</code>标签的<code>alink</code>属性</li>
<li><code>bgColor</code> &mdash;  代表<code>HTML body</code>标签的<code>bgcolor</code>属性</li>
<li><code>fgColor</code> &mdash;  代表<code>HTML body</code>标签的<code>text</code>属性</li>
<li><code>linkColor</code> &mdash;    代表<code>HTML body</code>标签的<code>link</code>属性</li>
<li><code>vlinkColor</code>  &mdash;  代表<code>HTML body</code>标签的<code>vlink</code>属性</li>
<li><code>lastModified</code>    &mdash; 页面最后修改的日期字符串，可以使用<code>Date</code>的构造函数转换为日期，例如：<code>new Date(document.lastModified);</code></li>
<li><code>referrer</code>    &mdash;  浏览器<code>history</code>中后退一个位置的<code>URL</code></li>
</ul>


<p>由于document代表HTML文档的内容，因此可以通过它表示文档中加载的一些元素，这些元素全部通过集合访问。</p>

<ul>
<li><code>anchors</code> &mdash;  文档中所有锚(a name=&ldquo;aname&rdquo;)的集合</li>
<li><code>applets</code> &mdash;  文档中所有<code>applet</code>标签表示的内容的集合</li>
<li><code>embeds</code>  &mdash;  文档中所有<code>embed</code>标签表示的内容的集合</li>
<li><code>forms</code>   &mdash;  文档中所有<code>form</code>标签表示的内容的集合</li>
<li><code>images</code>  &mdash;  文档中所有<code>image</code>标签表示的内容的集合</li>
<li><code>links</code>   &mdash; 文档中所有<code>a</code>(链接)标签表示的内容的集合</li>
</ul>


<h2>Document函数</h2>

<ul>
<li><code>JavaScript</code> <code>write()</code> 函数</li>
<li><code>JavaScript</code> <code>writeln()</code> 函数</li>
<li><code>JavaScript</code> <code>document.open()</code> 函数</li>
<li><code>JavaScript</code> <code>document.close()</code> 函数</li>
</ul>


<h2>使用document索引页面内的元素</h2>

<p>可以使用数字或名称索引页面中的元素集合，每个元素的属性都变成了集合中相应对象的属性。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">&quot;form1&quot;</span><span class="nt">&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://www.dreamdu.com/xhtml/&quot;</span> <span class="na">name=</span><span class="s">&quot;a1&quot;</span><span class="nt">&gt;</span>xhtml<span class="nt">&lt;/a&gt;&lt;/form&gt;</span>
</span><span class='line'><span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">&quot;form2&quot;</span><span class="nt">&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://www.dreamdu.com/css/&quot;</span> <span class="na">name=</span><span class="s">&quot;a2&quot;</span><span class="nt">&gt;</span>css<span class="nt">&lt;/a&gt;&lt;/form&gt;</span>
</span><span class='line'><span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">&quot;form3&quot;</span><span class="nt">&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://www.dreamdu.com/javascript/&quot;</span> <span class="na">name=</span><span class="s">&quot;a3&quot;</span><span class="nt">&gt;</span>javascript<span class="nt">&lt;/a&gt;&lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;显示第二个表单的名称&quot;</span> <span class="na">onclick=</span><span class="s">&quot;alert(document.forms[1].name)&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;显示第二个表单的名称第二种方法&quot;</span> <span class="na">onclick=</span><span class="s">&quot;alert(document.forms[&#39;form2&#39;].name)&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;显示第三个链接的名称&quot;</span> <span class="na">onclick=</span><span class="s">&quot;alert(document.links[2].name)&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;显示第三个链接的名称第二种方法&quot;</span> <span class="na">onclick=</span><span class="s">&quot;alert(document.links[&#39;a3&#39;].name)&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;显示第三个链接href属性的值&quot;</span> <span class="na">onclick=</span><span class="s">&quot;alert(document.links[2].href)&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>表示第二个表单的方法：<code>document.forms[1]或document.forms["form2"]</code></p>

<p>表示第三个链接的方法：<code>document.links[2]或document.links["a3"]</code></p>

<p>表示第三个链接<code>href</code>属性的方法：<code>document.links[2].href</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之window对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/31/learn-javascript-bom-base-window-object/"/>
    <updated>2014-03-31T15:26:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/31/learn-javascript-bom-base-window-object</id>
    <content type="html"><![CDATA[<h2>什么是 <code>BOM</code></h2>

<ul>
<li><code>BOM</code>是<code>browser object model</code>的缩写，简称浏览器对象模型</li>
<li><code>BOM</code>提供了独立于内容而与浏览器窗口进行交互的对象</li>
<li>由于<code>BOM</code>主要用于管理窗口与窗口之间的通讯，因此其核心对象是<code>window</code></li>
<li><code>BOM</code>由一系列相关的对象构成，并且每个对象都提供了很多方法与属性</li>
<li><code>BOM</code>缺乏标准，<code>JavaScript</code>语法的标准化组织是<code>ECMA</code>，<code>DOM</code>的标准化组织是<code>W3C</code></li>
<li><code>BOM</code>最初是<code>Netscape</code>浏览器标准的一部分</li>
</ul>


<h2>BOM结构图</h2>

<p><img src="http://dofa.u.qiniudn.com/image/web/browser_objects.png"></p>

<p>window对象是BOM的顶层(核心)对象，所有对象都是通过它延伸出来的，也可以称为window的子对象。</p>

<p>由于window是顶层对象，因此调用它的子对象时可以不显示的指明window对象，例如下面两行代码是一样的：</p>

<pre><code>document.write("blog.dofa.org");
window.document.write("blog.dofa.org");
</code></pre>

<h2>全局的window对象</h2>

<p>window对象是BOM中所有对象的核心</p>

<h4>JavaScript中的任何一个全局函数或变量都是window的属性</h4>

<pre><code>var sTest="dofa";
document.write(sTest==window.sTest);
</code></pre>

<p>结果：</p>

<pre><code>true    
</code></pre>

<p>由于sTest是全局变量，因此可以通过window.sTest访问这个变量</p>

<h4>window与self对象</h4>

<p>self对象与window对象完全相同，self通常用于确认就是在当前的窗体内</p>

<h4>window的子对象</h4>

<ul>
<li>JavaScript document 对象</li>
<li>JavaScript frames 对象</li>
<li>JavaScript history 对象</li>
<li>JavaScript location 对象</li>
<li>JavaScript navigator 对象</li>
<li>JavaScript screen 对象</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Octopress增加友情链接]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/30/add-links-for-octopress/"/>
    <updated>2014-03-30T17:16:12+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/30/add-links-for-octopress</id>
    <content type="html"><![CDATA[<h2>友情链接</h2>

<p>你有一些经常去的网站、博客，想推荐给大家，则可以在侧边栏加上一个“友情链接” 。</p>

<p>在 <code>source/_includes/custom/asides</code> 创建 <code>blog_link.html</code> ，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'><span class="nt">&lt;h1&gt;</span>友情链接<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://blog.jobbole.com/&quot;</span><span class="nt">&gt;</span>伯乐在线<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://www.csdn.net/&quot;</span><span class="nt">&gt;</span>CSDN<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://www.cnblogs.com/&quot;</span><span class="nt">&gt;</span>博客园<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://coolshell.cn/&quot;</span><span class="nt">&gt;</span>酷壳CoolShell<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以自行添加喜爱网站，然后在default_asides中加入<code>custom/asides/blog_link.html</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[把Octopress从github搬到gitcafe]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/29/move-octopress-from-gihub-to-gitcafe/"/>
    <updated>2014-03-29T08:49:00+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/29/move-octopress-from-gihub-to-gitcafe</id>
    <content type="html"><![CDATA[<p>其实找就想把<code>octopress</code>博客从<code>github</code>搬到<code>gitcafe</code>了，因为国内访问<code>github</code>的速度实在慢，而且还不时被墙。比如，今天不翻墙就无法访问了。</p>

<p>我采用了比较笨的方法：原本的东西都不需要改动，在一个新的文件夹下 <em>clone github master</em> 分支，增加 <em>gitcafe remote</em>，然后<code>push</code>到<code>gitcafe</code>的<code>gitcafe-pages</code>分支上。</p>

<h2>clone github master</h2>

<p>这个是<code>rake deploy</code>到<code>github</code>上去的文件。</p>

<h2>增加remote</h2>

<pre><code>git remote addd gitcafe git@gitcafe.com:xx/xx
</code></pre>

<h2>push到gitcafe</h2>

<pre><code>git push gitcafe gitcafe-pages
</code></pre>

<h2>注意事项</h2>

<h4>在gitcafe上增加ssh密钥</h4>

<p>否则git无法连接</p>

<h4>把指向github的域名改到gitcafe上去</h4>

<p>这样方便再次迁移</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress表格设置]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/27/add-table-for-octopress/"/>
    <updated>2014-03-27T14:50:05+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/27/add-table-for-octopress</id>
    <content type="html"><![CDATA[<p>Octopress默认的表格没有边框，比较难看。需要增加一个css。</p>

<h2>添加样式 <em>css</em></h2>

<p>新建一个 <code>data-table.css</code> ，放到 <code>source/stylesheets</code> 下面</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>* + table th, * + table td {
</span><span class='line'>  border-style:dashed;
</span><span class='line'>  border-width:1px;
</span><span class='line'>  border-color:#007eff;
</span><span class='line'>  padding-left: 3px;
</span><span class='line'>  padding-right: 3px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>* + table th {
</span><span class='line'>  border-style:solid;
</span><span class='line'>  font-weight:bold;
</span><span class='line'>  background-color:#d2e8ff;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>* + table tr:hover{
</span><span class='line'>    background-color:#c4e4fe;
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>* + table th[align="left"], * + table td[align="left"] {
</span><span class='line'>  text-align:left;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>* + table th[align="right"], * + table td[align="right"] {
</span><span class='line'>  text-align:right;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>* + table th[align="center"], * + table td[align="center"] {
</span><span class='line'>  text-align:center;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>包含样式</h2>

<p>在 <code>source/_includes/head.html</code> 增加如下代码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;link href="{{ root_url }}/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css"&gt;
</span><span class='line'>&lt;link href="{{ root_url }}/stylesheets/data-table.css" media="screen, projection" rel="stylesheet" type="text/css" /&gt;</span></code></pre></td></tr></table></div></figure>


<h2>表格写法</h2>

<pre><code>左对齐表头 | 中间对齐表头 | 右对齐表头
:----------|:------------:|----------:
左对齐数据 |中间对齐数据  |右对齐数据
第二行数据 |也是第二行    |还是第二行
懒得写了...|.....         |.....
长数据，以便看出表头的对齐|长数据，以便看出表头的对齐|长数据，以便看出表头的对齐
</code></pre>

<p>生成表格：</p>

<table>
<thead>
<tr>
<th align="left">左对齐表头 </th>
<th align="center"> 中间对齐表头 </th>
<th align="right"> 右对齐表头</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">左对齐数据 </td>
<td align="center">中间对齐数据  </td>
<td align="right">右对齐数据</td>
</tr>
<tr>
<td align="left">第二行数据 </td>
<td align="center">也是第二行    </td>
<td align="right">还是第二行</td>
</tr>
<tr>
<td align="left">懒得写了&hellip;</td>
<td align="center">&hellip;..         </td>
<td align="right">&hellip;..</td>
</tr>
<tr>
<td align="left">长数据，以便看出表头的对齐</td>
<td align="center">长数据，以便看出表头的对齐</td>
<td align="right">长数据，以便看出表头的对齐</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jekyll中的变量和模板]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/23/variable-and-template-in-jekyll/"/>
    <updated>2014-03-23T21:10:39+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/23/variable-and-template-in-jekyll</id>
    <content type="html"><![CDATA[<h2>Jekyll目录及一些说明</h2>

<p>Jekyll的基本结构：</p>

<table>
<thead>
<tr>
<th align="center">文件或目录  </th>
<th align="left">     功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">_config.yml </td>
<td align="left"> Jekyll的配置文件</td>
</tr>
<tr>
<td align="center">_includes   </td>
<td align="left"> 代码片段文件夹</td>
</tr>
<tr>
<td align="center">_layouts    </td>
<td align="left"> 模板文件夹</td>
</tr>
<tr>
<td align="center">_posts      </td>
<td align="left"> 文章文件夹</td>
</tr>
<tr>
<td align="center">_sites      </td>
<td align="left"> 生成的博客</td>
</tr>
</tbody>
</table>


<p>具体描述如下：</p>

<ul>
<li>_includes文件夹中所放的文件是最终要放到模版中的一些代码片段。</li>
<li>_layouts中放的一些模版，模版是用包含page或post内容的。Jekyll的模版使用HTML语法来写，并包含YAML Front Matter。所有的模版都可用Liquid来与网站进行交互。所的的模版都可以使用全局变量site和page，site变量包含该网站所有可以接触得到的内容和元数据(meta-data)，page变量包含的是当前渲染的page或post的所有可以接触得到的数据。</li>
<li>_post文件夹中放的是自己要发布的post文章。post文件的命名规则为YEAR-MONTH-DATE-title.MARKUP，使用rake post会自动将post文件命名合适。而对于page，所有放在根目录下或不以下划线开头的文件夹中有格式的文件都会被Jekyll处理成page。这里说的有格式是指文件含有YAML Front Matter。所有的post和page都要用markdown或者texile或者HTML语法来写，并可以包含Liquid模版的语法。还要有 YAML Front Matter (Jekyll只处理具有YAML Front Matter的文件)。YAML Front Matter必须放在文件的开头，一对&mdash;-之间，用户可在这一对&mdash;-间设置预先定义的变量或用户自己的数据。</li>
</ul>


<h2>Jekyll模板全局变量</h2>

<table>
<thead>
<tr>
<th align="center">变量   </th>
<th align="left">                      描述</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">site      </td>
<td align="left"> 全站的信息+_config.yml文件中的配置选项</td>
</tr>
<tr>
<td align="center">page      </td>
<td align="left"> 这个变量中包含YAML前置数据,另外加上两个额外的变量值:url和content</td>
</tr>
<tr>
<td align="center">content   </td>
<td align="left"> 在布局模板文件中，这里变量包含了页面的子视图。这个变量将会把渲染后的内容插入到模板文件中。这个变量不能在文章和页面文件中使用</td>
</tr>
<tr>
<td align="center">paginator </td>
<td align="left"> 一旦paginate配置选项被设置了， 这个变量才能被使用</td>
</tr>
</tbody>
</table>


<h2>Jekyll模板Page变量</h2>

<table>
<thead>
<tr>
<th align="center">变量      </th>
<th align="left">                  描述</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">page.content    </td>
<td align="left"> 页面中未渲染的内容</td>
</tr>
<tr>
<td align="center">page.title      </td>
<td align="left"> 文章的标题</td>
</tr>
<tr>
<td align="center">page.url        </td>
<td align="left"> 除去域名以外的URL，例子:/2013/12/14/higrid-net.html</td>
</tr>
<tr>
<td align="center">page.date       </td>
<td align="left"> 指定每一篇文章的时间，这个选项能够覆盖一篇文章中前置数据设置的时间，它的格式是这样的:YYYY-MM-DD HH:MM:SS</td>
</tr>
<tr>
<td align="center">page.id         </td>
<td align="left"> 每一篇文章的唯一标示符(在RSS中非常有用)例子：/2008/12/14/higrid-net</td>
</tr>
<tr>
<td align="center">page.categories </td>
<td align="left"> 这篇文章隶属的分类的一个列表，分类是通过在<em>post目录中的目录结构推导而来的。举例来说，在路径/work/code/</em>posts/2008-12-24-closures.textile下的文件，这个变量将会是[work,code]。这个变量也能在YAML前置数据中被指定。</td>
</tr>
<tr>
<td align="center">page.tags       </td>
<td align="left"> 这篇文章的标签的列表。这些数据能够在YAML前置数据中指定</td>
</tr>
<tr>
<td align="center">page.next       </td>
<td align="left"> 按时间序的下一篇文章</td>
</tr>
<tr>
<td align="center">page.content    </td>
<td align="left"> 按时间序的上一篇文章</td>
</tr>
</tbody>
</table>


<p><strong>注意</strong> :任何你自己指定的自定义前置数据都能够通过page调用。举例来说，如果你在页面的前置数据中设置了custom_css: true，那这个值可以在模板可以这样调用:page.custom_css</p>

<h2>Jekyll模板Paginator变量</h2>

<table>
<thead>
<tr>
<th align="center">变量          </th>
<th align="left">          描述</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">paginator.per_page      </td>
<td align="left"> 每一个页面上文章的数量</td>
</tr>
<tr>
<td align="center">paginator.posts         </td>
<td align="left"> 当前页面上可用的文章</td>
</tr>
<tr>
<td align="center">paginator.total_posts   </td>
<td align="left"> 所有文章的数量</td>
</tr>
<tr>
<td align="center">paginator.total_pages   </td>
<td align="left"> 所有页面的数量</td>
</tr>
<tr>
<td align="center">paginator.page          </td>
<td align="left"> 当前页面的数量</td>
</tr>
<tr>
<td align="center">paginator.previous_page </td>
<td align="left"> 前面的页面的数量</td>
</tr>
<tr>
<td align="center">paginator.next_page     </td>
<td align="left"> 接下来的的页面的数量</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SublimeTableEditor的使用]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/19/use-sublimetableeditor/"/>
    <updated>2014-03-19T14:50:39+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/19/use-sublimetableeditor</id>
    <content type="html"><![CDATA[<h2>基本的使用方法</h2>

<p>要使用该插件 ，需要用 <em>ctrl+shift+p</em> 打开 <em>Table Editor: Enable for current syntax</em> 来激活 插件。</p>

<h4>创建表头</h4>

<p>输入：</p>

<pre><code>| Name | Phone |
|
</code></pre>

<p>然后按下 <em>Tab</em>，插件帮你完成表头格式化：</p>

<pre><code>| Name | Phone |
|------|-------|
|      |       |
</code></pre>

<p>更快的创建表头方法：</p>

<pre><code>|Name|Phone
</code></pre>

<p>然后按下 <em>ctrl+k, enter</em>，你会得到：</p>

<pre><code>| Name | Phone |
|------|-------|
|      |       |
</code></pre>

<p>如果按下 <em>ctrl+k, &ndash;</em>，你会得到：</p>

<pre><code>| Name | Phone |
|------|-------|
</code></pre>

<h4>新建行、在table中移动和输入文字后的对其</h4>

<p><em>tab</em> 为向后移动，<em>shift+tab</em> 向后移动，并且可以完成对其和新建行</p>

<h2>对列的操作</h2>

<p><em>alt+shift+right</em>完成新建列，<em>alt+shift+left</em>删除列，<em>alt+right</em>和<em>alt+left</em>完成交换列。</p>

<h4>新建列</h4>

<pre><code>|    Name   |   Phone   |
|-----------|-----------|
| Anna      | 123456789 |
| Alexander | 987654321 |
|           | _         |
</code></pre>

<p>如果按下 <em>alt+shift+right</em>，你会得到：</p>

<pre><code>|    Name   |   |   Phone   |
|-----------|---|-----------|
| Anna      |   | 123456789 |
| Alexander |   | 987654321 |
|           | _ |           |
</code></pre>

<h4>删除列</h4>

<p>继续按下 <em>alt+shift+left</em>，你会得到：</p>

<pre><code>|    Name   |   Phone   |
|-----------|-----------|
| Anna      | 123456789 |
| Alexander | 987654321 |
|           | _         |
</code></pre>

<h4>交换列</h4>

<pre><code>|    Name   | Age |   Phone   |
|-----------|-----|-----------|
| Anna      |  32 | 123456789 |
| Alexander |  28_| 987654321 |
|           |     |           |
</code></pre>

<p>继续按下 <em>alt+left</em>，你会得到：</p>

<pre><code>|    Name   | Age |   Phone   |
|-----------|-----|-----------|
| Anna      | 32  | 123456789 |
| Alexander | 28_ | 987654321 |
|           |     |           |
</code></pre>

<p>继续按下 <em>alt+right</em>，你会得到：</p>

<pre><code>|    Name   | Age |   Phone   |
|-----------|-----|-----------|
| Anna      | 32  | 123456789 |
| Alexander | 28_ | 987654321 |
|           |     |           |
</code></pre>

<h2>对行的操作</h2>

<h4>插入新行</h4>

<pre><code>|    Name   |   Phone   | Age |
|-----------|-----------|-----|
| Anna      | 123456789 | 32_ |
| Alexander | 987654321 | 28  |
|           |           |     |
</code></pre>

<p>如果按下 <em>alt+shift+down</em>，你会得到：</p>

<pre><code>|    Name   |   Phone   | Age |
|-----------|-----------|-----|
|           |           |     |
| Anna      | 123456789 | 32_ |
| Alexander | 987654321 | 28  |
|           |           |     |
</code></pre>

<h4>删除行</h4>

<p>移动到要删除的行，</p>

<pre><code>|    Name   |   Phone   | Age |
|-----------|-----------|-----|
|           |           | _   |
| Anna      | 123456789 | 32  |
| Alexander | 987654321 | 28  |
|           |           |     |
</code></pre>

<p>按下 <em>alt+shift+up</em>，你会得到：</p>

<pre><code>|    Name   |   Phone   | Age |
|-----------|-----------|-----|
| Anna      | 123456789 |  32 |
| Alexander | 987654321 |  28 |
|           |           |     |
</code></pre>

<h4>插入分割线</h4>

<pre><code>|    Name   |   Phone   | Age |             Position             |
|-----------|-----------|-----|----------------------------------|
| Anna      | 123456789 |  32 | Senior Software Engineer_        |
| Alexander | 987654321 |  28 | Senior Software Testing Engineer |
|           |           |     |                                  |
</code></pre>

<p>按下 <em>ctrl+k,&ndash;</em>，得到：</p>

<pre><code>|    Name   |   Phone   | Age |             Position             |
|-----------|-----------|-----|----------------------------------|
| Anna      | 123456789 |  32 | Senior Software Engineer_        |
|-----------|-----------|-----|----------------------------------|
| Alexander | 987654321 |  28 | Senior Software Testing Engineer |
|           |           |     |                                  |
</code></pre>

<h4>单元中内容分行</h4>

<pre><code>|    Name   |   Phone   | Age |              Position             |
|-----------|-----------|-----|-----------------------------------|
| Anna      | 123456789 |  32 | Senior Software Engineer          |
| Alexander | 987654321 |  28 | Senior Software _Testing Engineer |
|           |           |     |                                   |
</code></pre>

<p>按下 <em>alt+enter</em>，得到：</p>

<pre><code>|    Name   |   Phone   | Age |         Position         |
|-----------|-----------|-----|--------------------------|
| Anna      | 123456789 |  32 | Senior Software Engineer |
| Alexander | 987654321 |  28 | Senior Software          |
|           |           |     | Testing Engineer         |
</code></pre>

<h4>单元中内容合并</h4>

<p>命令为：<em>ctrl+j</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Octopress添加统计]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/10/add-statistics-for-octopress/"/>
    <updated>2014-03-10T11:24:42+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/10/add-statistics-for-octopress</id>
    <content type="html"><![CDATA[<h2>使用Google Analytics统计工具</h2>

<h4>注册Google Analytics账号</h4>

<p>到 <a href="http://www.google.com/analytics/" title="Google Analytics"><code>Google Analytics</code></a> 注册<code>Analytics</code>，获得一个<code>google_analytics_tracking_id</code>，添加到<code>_config.yml</code>中对应位置，并对网站进行验证即可</p>

<h4>验证Google Analytics</h4>

<p>对自己的网站进行验证，只需将网站提供的用于验证的代码添加到<code>source/_includes/head.html</code>的<code>&lt;head&gt;</code>标签之间，网站部署到网上后，过几分钟即可验证通过，其他 需要验证的也同样操作。</p>

<pre><code>注意：如果head中有include google-analitics.html，这一步就不需要了
</code></pre>

<h2>使用CNZZ统计工具</h2>

<h4>注册CNZZ账号</h4>

<p>到<a href="http://zhanzhang.cnzz.com/" title="CNZZ">CNZZ</a>注册一个账号。注册后，添加并验证你的网站就可以添加统计代码了</p>

<h4>验证CNZZ</h4>

<p>选好自己喜欢的样式，获得代码，可添加到<code>source/_includes/custom/footer.html</code>中。即可查看每天你的博客的流量，进行相应的优化了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debian7 Wheezy 镜像源的配置]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/09/update-debian-wheezy-mirrors/"/>
    <updated>2014-03-09T08:13:15+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/09/update-debian-wheezy-mirrors</id>
    <content type="html"><![CDATA[<p>debian update或install package使用国内源会非常慢，一般我们使用163源。
简单的说有两种方法修改源，我们直接使用第二种方法。</p>

<hr />

<h2>方法1：增加163源</h2>

<p>以Squeeze为例, 编辑/etc/apt/sources.list文件, 在文件最前面添加以下条目(操作前请做好相应备份)</p>

<pre><code>deb http://mirrors.163.com/debian/ squeeze main non-free contrib
deb http://mirrors.163.com/debian/ squeeze-proposed-updates main non-free contrib
deb-src http://mirrors.163.com/debian/ squeeze main non-free contrib
deb-src http://mirrors.163.com/debian/ squeeze-proposed-updates main non-free contrib
</code></pre>

<h2>方法2：替换使用163的源</h2>

<p>下载相应版本的sources.list, 覆盖/etc/apt/sources.list即可(操作前请做好相应备份)</p>

<pre><code>http://mirrors.163.com/.help/debian.html
</code></pre>

<h2>使用新的源更新debian</h2>

<pre><code>sudo apt-get update -y
sudo apt-get upgrade -y
sudo apt-get install sudo -y
</code></pre>

<h2>更新失败时</h2>

<p>注释掉下面的三行，删除也行</p>

<pre><code>#deb http://http.us.debian.org/debian wheezy main contrib non-free
#deb http://non-us.debian.org/debian-non-US wheezy/non-US main contrib non-free
#deb http://security.debian.org wheezy/updates main contrib non-free
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant使用简介]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/09/vagrant-introduction/"/>
    <updated>2014-03-09T06:21:16+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/09/vagrant-introduction</id>
    <content type="html"><![CDATA[<h2>Vagrant简介</h2>

<blockquote><p>Vagrant is a tool for building complete development environments. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases development/production parity, and makes the &ldquo;works on my machine&rdquo; excuse a relic of the past.</p></blockquote>

<h2>Vagrant安装</h2>

<h4>virtualbox</h4>

<p><a href="https://www.virtualbox.org">https://www.virtualbox.org</a></p>

<h4>vagrant</h4>

<p><a href="http://www.vagrantup.com">http://www.vagrantup.com</a></p>

<h4>box</h4>

<p><a href="http://www.vagrantbox.es">http://www.vagrantbox.es</a></p>

<h2>Vagrant使用</h2>

<h4>使用下载的box初始化</h4>

<pre><code>vagrant box add precise32 http://files.vagrantup.com/precise32.box
</code></pre>

<h4>初始化开发环境</h4>

<pre><code>cd ~/dev    #开发目录
vagrant init precise32
</code></pre>

<h4>运行Vagrant box</h4>

<pre><code>vagrant up
</code></pre>

<h4>远程连接到box</h4>

<pre><code>vagrant ssh
</code></pre>

<h4>其他常用Vagrant命令</h4>

<pre><code>vagrant box add NAME URL            #添加一个box
vagrant box list                    #查看本地已添加的box
vagrant box remove NAME virtualbox  #删除本地已添加的box，如若是版本1.0.x，执行$ vagrant box remove  NAME
vagrant init NAME                   #初始化，实质应是创建Vagrantfile文件         
vagrant up                          #启动虚拟机
vagrant halt                        #关闭虚拟机
vagrant destroy                     #销毁虚拟机
vagrant reload                      #重启虚拟机
vagrant package                     #当前正在运行的VirtualBox虚拟环境打包成一个可重复使用的box            
vagrant ssh                         #进入虚拟环境
</code></pre>

<h2>Vagrant高级</h2>

<h4>Vagrant配置文件Vagrantfile</h4>

<p>官方解释是这样的：The primary function of the Vagrantfile is to describe the type of machine required for a project, and how to configure and provision these machines。翻译出来太生涩，简单来说就是配置这个虚拟主机网络连接方式，端口转发，同步文件夹，以及怎么和puppet，chef结合的一个配置文件。执行完<code>vagrant init</code>后,在工作目录中,你会发现此文件。</p>

<p>使用V2版本配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>配置网络</h4>

<ul>
<li>端口转发：（假设虚拟机的80端口提供web服务，此处将通过访问物理机的8080端口转发到虚拟机的80端口，来实现web的访问）</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">guest</span><span class="p">:</span> <span class="mi">80</span><span class="p">,</span> <span class="ss">host</span><span class="p">:</span> <span class="mi">8080</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>桥接网络（公共网络，局域网DHCP服务器自动分配IP）</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:public_network</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<pre><code>VBoxManage list bridgedifs | grep ^Name    #可通过此命令查看本机的网卡
</code></pre>

<ul>
<li>私有网络：允许多个虚拟机通过主机通过网络互相通信，vagrant允许用户分配一个静态IP，然后使用私有网络设置。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&quot;192.168.50.4&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>同步文件夹</h4>

<p>默认的，vagrant将共享你的工作目录（即Vagrantfile所在的目录）到虚拟机中的/vagrant,所以一般不需配置即可，如你需要可配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># other config here</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&quot;src/&quot;</span><span class="p">,</span> <span class="s2">&quot;/srv/website&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ldquo;src/&#8221;：物理机目录;&rdquo;/srv/website&#8221;虚拟机目录</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用PHP-FPM安装php5 server]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/03/install-php5-server-via-php-fpm/"/>
    <updated>2014-03-03T13:51:40+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/03/install-php5-server-via-php-fpm</id>
    <content type="html"><![CDATA[<h2>安装环境</h2>

<ul>
<li><p>nginx</p></li>
<li><p>mysql</p></li>
</ul>


<h2>使用<code>PHP-FPM</code>安装php5 server</h2>

<pre><code>apt-get install php5-fpm
</code></pre>

<blockquote><p>PHP-FPM is a daemon process (with the init script /etc/init.d/php5-fpm) that runs a FastCGI server on the socket /var/run/php5-fpm.sock.</p></blockquote>

<h2>配置nginx</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[...]
</span><span class='line'>worker_processes  4;
</span><span class='line'>[...]
</span><span class='line'>    keepalive_timeout   2;
</span><span class='line'>[...]</span></code></pre></td></tr></table></div></figure>


<h2>网站配置</h2>

<pre><code>vim /etc/nginx/sites-available/yoursite
</code></pre>

<h2>PHP配置</h2>

<pre><code>vim /etc/php5/fpm/php.ini
</code></pre>

<p>set cgi.fix_pathinfo=0:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[...]
</span><span class='line'>; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI.  PHP's
</span><span class='line'>; previous behaviour was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok
</span><span class='line'>; what PATH_INFO is.  For more information on PATH_INFO, see the cgi specs.  Setting
</span><span class='line'>; this to 1 will cause PHP CGI to fix its paths to conform to the spec.  A setting
</span><span class='line'>; of zero causes PHP to behave as before.  Default is 1.  You should fix your scripts
</span><span class='line'>; to use SCRIPT_FILENAME rather than PATH_TRANSLATED.
</span><span class='line'>; http://php.net/cgi.fix-pathinfo
</span><span class='line'>cgi.fix_pathinfo=0
</span><span class='line'>[...]</span></code></pre></td></tr></table></div></figure>


<h2>Server Reload</h2>

<pre><code>/etc/init.d/nginx -s reload
/etc/init.d/php5-fpm reload
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress发生titlecase错误]]></title>
    <link href="http://blog.dofa.org/blog/2014/02/24/occurs-titlecase-error-in-octopress/"/>
    <updated>2014-02-24T13:25:52+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/02/24/occurs-titlecase-error-in-octopress</id>
    <content type="html"><![CDATA[<p>把_config.yml中的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>titlecase: true</span></code></pre></td></tr></table></div></figure>


<p>修改为：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>titlecase: false  </span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为 Octopress 添加多说评论系统]]></title>
    <link href="http://blog.dofa.org/blog/2014/02/24/add-duoshuo-commemt-system-into-octopress/"/>
    <updated>2014-02-24T08:49:29+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/02/24/add-duoshuo-commemt-system-into-octopress</id>
    <content type="html"><![CDATA[<p>disqus是国外的评论系统，速度实在太慢，使用duoshuo会比较好</p>

<h2>修改配置</h2>

<p>在_config.yml中注释掉有关disqus的配置，增加：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># duoshuo comments
</span><span class='line'>duoshuo_comments: true
</span><span class='line'>duoshuo_short_name: yourname</span></code></pre></td></tr></table></div></figure>


<h2>修改post模板</h2>

<p>在 <code>source/_layouts/post.html</code> 中的 disqus代码下方添加多说评论模块</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.duoshuo_short_name and site.duoshuo_comments == true and page.comments == true %}
</span><span class='line'>  <span class="nt">&lt;section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Comments<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;comments&quot;</span> <span class="na">aria-live=</span><span class="s">&quot;polite&quot;</span><span class="nt">&gt;</span>{% include post/duoshuo.html %}<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<h2>增加duoshuo模板</h2>

<p>创建一个 <code>source/_includes/post/duoshuo.html</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- Duoshuo Comment BEGIN --&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;ds-thread&quot;</span> <span class="na">data-title=</span><span class="s">&quot;{% if site.titlecase %}{{ post.title | titlecase }}{% else %}{{ post.title }}{% endif %}&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">duoshuoQuery</span> <span class="o">=</span> <span class="p">{</span><span class="nx">short_name</span><span class="o">:</span><span class="s2">&quot;{{ site.duoshuo_short_name }}&quot;</span><span class="p">};</span>
</span><span class='line'>  <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">ds</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">ds</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span><span class="nx">ds</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">ds</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;http://static.duoshuo.com/embed.js&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">ds</span><span class="p">.</span><span class="nx">charset</span> <span class="o">=</span> <span class="s1">&#39;UTF-8&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">ds</span><span class="p">);</span>
</span><span class='line'>  <span class="p">})();</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="c">&lt;!-- Duoshuo Comment END --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>204-03-29更新</h2>

<h4>为page增加评论功能</h4>

<p>在 <code>source/_layouts/page.html</code> 中的disqus代码下方添加多说评论模块：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.duoshuo_short_name and site.duoshuo_comments == true and page.comments == true %}
</span><span class='line'>  <span class="nt">&lt;section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Comments<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;comments&quot;</span> <span class="na">aria-live=</span><span class="s">&quot;polite&quot;</span><span class="nt">&gt;</span>{% include post/duoshuo.html %}<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<p>在 <code>_includes/article.html</code> 文件的disqus代码下方添加：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>     {% if site.duoshuo_short_name and page.comments != false and post.comments != false and site.duoshuo_comments == true %}
</span><span class='line'>      | <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% if index %}{{ root_url }}{{ post.url }}{% endif %}#comments&quot;</span><span class="nt">&gt;</span>Comments<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>     {% endif %}
</span></code></pre></td></tr></table></div></figure>


<h4>为首页侧边栏插入最新评论</h4>

<p>首先在 _config.yml 中再插入如下代码</p>

<pre><code>duoshuo_asides_num: 10      # 侧边栏评论显示条目数
duoshuo_asides_avatars: 0   # 侧边栏评论是否显示头像
duoshuo_asides_time: 0      # 侧边栏评论是否显示时间
duoshuo_asides_title: 0     # 侧边栏评论是否显示标题
duoshuo_asides_admin: 0     # 侧边栏评论是否显示作者评论
duoshuo_asides_length: 18   # 侧边栏评论截取的长度
</code></pre>

<p>再创建 <code>_includes/custom/asides/recent_comments.html</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'><span class="nt">&lt;h1&gt;</span>Recent Comments<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;ds-recent-comments&quot;</span> <span class="na">data-num-items=</span><span class="s">&quot;{{ site.duoshuo_asides_num }}&quot;</span> <span class="na">data-show-avatars=</span><span class="s">&quot;{{ site.duoshuo_asides_avatars }}&quot;</span> <span class="na">data-show-time=</span><span class="s">&quot;{{ site.duoshuo_asides_time }}&quot;</span> <span class="na">data-show-title=</span><span class="s">&quot;{{ site.duoshuo_asides_title }}&quot;</span> <span class="na">data-show-admin=</span><span class="s">&quot;{{ site.duoshuo_asides_admin }}&quot;</span> <span class="na">data-excerpt-length=</span><span class="s">&quot;{{ site.duoshuo_asides_length }}&quot;</span><span class="nt">&gt;&lt;/ul&gt;</span>
</span><span class='line'>{% if index %}
</span><span class='line'><span class="c">&lt;!--多说js加载开始，一个页面只需要加载一次 --&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">duoshuoQuery</span> <span class="o">=</span> <span class="p">{</span><span class="nx">short_name</span><span class="o">:</span><span class="s2">&quot;{{ site.duoshuo_short_name }}&quot;</span><span class="p">};</span>
</span><span class='line'>  <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">ds</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">ds</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span><span class="nx">ds</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">ds</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;http://static.duoshuo.com/embed.js&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">ds</span><span class="p">.</span><span class="nx">charset</span> <span class="o">=</span> <span class="s1">&#39;UTF-8&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">ds</span><span class="p">);</span>
</span><span class='line'>  <span class="p">})();</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="c">&lt;!--多说js加载结束，一个页面只需要加载一次 --&gt;</span>
</span><span class='line'>{% endif %}
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后，_confit.yml 中的 blog_index_asides 行或 page_asides 行或 post_asides 添加:</p>

<pre><code>custom/asides/recent_comments.html
</code></pre>
]]></content>
  </entry>
  
</feed>
