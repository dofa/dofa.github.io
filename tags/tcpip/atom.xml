<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: tcpip | dofa blog]]></title>
  <link href="http://dofa.org/tags/tcpip/atom.xml" rel="self"/>
  <link href="http://dofa.org/"/>
  <updated>2014-02-26T03:35:53+00:00</updated>
  <id>http://dofa.org/</id>
  <author>
    <name><![CDATA[dofa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TCP/IP协议学习系列之二 — Ethernet控制器]]></title>
    <link href="http://dofa.org/blog/2013/07/27/tcp-ip-protocol-learning-series-two-ethernet-directors/"/>
    <updated>2013-07-27T14:25:52+00:00</updated>
    <id>http://dofa.org/blog/2013/07/27/tcp-ip-protocol-learning-series-two-ethernet-directors</id>
    <content type="html"><![CDATA[<h2>硬件架构</h2>

<p>前面讲了，处理TCP/IP封包的硬件主要使用Ethernet模块。
大多数Ethernet模块分为这几个部分：PHY，MAC，MII/RMII管理，DMA和控制器。</p>

<ul>
<li>PHY实现bit流到cat5的transfer</li>
<li>MAC实现数据链路层的介质访问控制子层，并执行CSMA/CD功能</li>
<li>MII/RMII提供访问PHY的接口给MAC使用</li>
<li>DMA大家都懂得</li>
<li>控制器这里指的是协调MAC、MII/RMII管理、DMA的工具，不过一般也理解为Ethernet模块。比如PIC32中Ethernet控制器包括MAC、MII/RMII管理、DMA和SFR。</li>
</ul>


<h2>以太网原理—CSMA/CD</h2>

<p>CS：载波侦听
在发送数据之前进行监听，以确保线路空闲，减少冲突的机会。
MA：多址访问
每个站点发送的数据，可以同时被多个站点接收。
CD：冲突检测
边发送边检测，发现冲突就停止发送，然后延迟一个随机时间之后继续发送。</p>

<h2>以太网发展简史</h2>

<p>IEEE802.3 以太网标准
IEEE802.3u 100BASE-T快速以太网标准
IEEE802.3z/ab 1000Mb/s千兆以太网标准
IEEE802.3ae 10GE以太网标准</p>

<h2>相关技术</h2>

<h4>自协商技术</h4>

<p><img src="http://dofa.u.qiniudn.com/imgage/embeded/negotiation.bmp"></p>

<h4>自适应技术： 智能MDI/MDIX</h4>

<p>直连网线、交叉网线自动识别</p>

<h4>流量控制</h4>

<ul>
<li>当通过交换机一个端口的流量过大，超过了它的处理能力时，就会发生端口阻塞。流量控制的作用是防止在出现阻塞的情况下丢帧。</li>
<li>在半双工方式下，流量控制是通过反压（backpressure）技术实现的，模拟产生碰撞，使得信息源降低发送速度。</li>
<li>在全双工方式下流量控制一般遵循IEEE 802.3x标准。</li>
</ul>


<h4>全双工流量控制</h4>

<ul>
<li>IEEE802.3x标准定义了一种新方法，在全双工环境中去实现流量控制。交换机产生一个PAUSE帧，PAUSE帧使用一个保留的组播地址：01-80-C2-00-00-01，将它发送给正在发送的站，发送站接收到该帧后，就会暂停或停止发送。</li>
<li>PAUSE帧利用了一个保留的组播地址，它不会被网桥和交换机所转发，这样，PAUSE帧不会产生附加信息量。</li>
</ul>


<h2>MII接口介绍</h2>

<p>MII接口提供了MAC和PHY之间、PHY与STA（Station Management）之间的互联技术，该接口支持10Mb/s与100Mb/s的数据传输速率，数据传输的位宽为4位。
MII通过增加数据位宽实现参考时钟的降低。
MII接口主要包括4个部分：</p>

<ul>
<li>从MAC层到物理层的发送数据的接口</li>
<li>从物理层到MAC层的接受数据的接口</li>
<li>从物理层到MAC层的状态指示信号</li>
<li>MAC层和物理层之间传送控制和状态信息的MDIO接口</li>
</ul>


<p>MII接口可分为MAC模式和PHY模式，实际中主要用MAC模式，MAC模式的接口定义为：</p>

<p><img src="http://dofa.u.qiniudn.com/imgage/embeded/MII.bmp"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TCP/IP 协议学习系列之一 — 帧结构（frame）]]></title>
    <link href="http://dofa.org/blog/2013/07/26/tcp-ip-protocol-learning-series-one-of-frame-structure/"/>
    <updated>2013-07-26T14:25:52+00:00</updated>
    <id>http://dofa.org/blog/2013/07/26/tcp-ip-protocol-learning-series-one-of-frame-structure</id>
    <content type="html"><![CDATA[<h2>TCP/IP协议封包</h2>

<p>我觉得学习TCP/IP协议可以从它的封包开始，了解它在硬件上是怎么实现的是个不错的开端。</p>

<p><img src="http://dofa.u.qiniudn.com/imgage/embeded/tcpip-package.bmp"></p>

<p>上图是应用程序通过TCP/IP协议传输时的数据封包过程，该图基本反应了TCP/IP协议簇的数据打包过程。
封装好的IP协议一般通过硬件发送出去，比如Ethernet、令牌网、电话线。目前广泛应用的是Ethernet，我们的产品也不例外。</p>

<h2>Ethernet Frame结构</h2>

<p>我们看下Ethernet的帧结构：</p>

<p><img src="http://dofa.u.qiniudn.com/imgage/embeded/ethernet-frame.bmp"></p>

<p>基本上就是在TCP/IP封包基础上增加了一个Ethernet Frame Header和Frame Tail(CRC)。</p>

<p>这里的DA和SA指的是MAC，固定为6字节。类型/长度在不同的协议规格下有不同意义，Ethernet-II要求不小于0×8000的类型码，IEEE 802规格定义该字段为报文数据的长度。</p>
]]></content>
  </entry>
  
</feed>
