<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: BOM | Do Far]]></title>
  <link href="http://blog.dofa.org/tags/bom/atom.xml" rel="self"/>
  <link href="http://blog.dofa.org/"/>
  <updated>2014-04-02T15:10:51+00:00</updated>
  <id>http://blog.dofa.org/</id>
  <author>
    <name><![CDATA[dofa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之location对象]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-location-object/"/>
    <updated>2014-04-03T06:10:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-location-object</id>
    <content type="html"><![CDATA[<p>Location用于获取或设置窗体的URL，并且可以用于解析URL，是BOM中最重要的对象之一</p>

<h2>Location对象</h2>

<ul>
<li><code>Location</code>既是<code>window</code>对象的属性又是<code>document</code>对象的属性</li>
<li><code>location</code>包含8个属性，其中7个都是当前窗体的<code>URL</code>的一部分，剩下的也是最重要的一个是<code>href</code>属性，代表当前窗体的<code>URL</code></li>
<li><code>location</code>的8个属性都是可读写的，但是只有<code>href</code>与<code>hash</code>的写才有意义。例如改变<code>location.href</code>会重新定位到一个<code>URL</code>，而修改<code>location.hash</code>会跳到当前页面中的<code>anchor(&lt;a id="name"&gt;</code>或者<code>&lt;div id="id"&gt;</code>等)名字的标记(如果有)，而且页面不会被重新加载</li>
</ul>


<h2>示例</h2>

<pre><code>document.write(window.location==document.location);
</code></pre>

<h2>Location对象属性图示</h2>

<p><img src="http://dofa.u.qiniudn.com/image/web/window_location.png"></p>

<p>location属性</p>

<ul>
<li><code>JavaScript</code> <code>hash</code> 属性    &mdash;  返回<code>URL</code>中<code>#</code>符号后面的内容</li>
<li><code>JavaScript</code> <code>host</code> 属性    &mdash;  返回域名</li>
<li><code>JavaScript</code> <code>hostname</code> 属性    &mdash;  返回主域名</li>
<li><code>JavaScript</code> <code>href</code> 属性    &mdash;  返回当前文档的完整<code>URL</code>或设置当前文档的<code>URL</code></li>
<li><code>JavaScript</code> <code>pathname</code> 属性    &mdash;  返回<code>URL</code>中域名后的部分</li>
<li><code>JavaScript</code> <code>port</code> 属性    &mdash;  返回<code>URL</code>中的端口</li>
<li><code>JavaScript</code> <code>protocol</code> 属性    &mdash;  返回<code>URL</code>中的协议</li>
<li><code>JavaScript</code> <code>search</code> 属性  &mdash;  返回<code>URL</code>中的查询字符串</li>
<li><code>JavaScript</code> <code>assign()</code>   函数 &mdash;   设置当前文档的<code>URL</code></li>
<li><code>JavaScript</code> <code>replace()</code> 函数 &mdash;    设置当前文档的<code>URL</code>，并在<code>history</code>对象的地址列表中删除这个<code>URL</code></li>
<li><code>JavaScript</code> <code>reload()</code>   函数 &mdash;   重新载入当前文档(从<code>server</code>服务器端)</li>
<li><code>JavaScript</code> <code>toString()</code> 函数 &mdash;   返回<code>location</code>对象<code>href</code>属性当前的值</li>
</ul>


<p>Note: 主域名是不带www的域名，例如dreamdu.com，主域名前面带前缀的通常都为二级域名或多级域名，例如www.dreamdu.com其实是二级域名。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之history对象]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-history-object/"/>
    <updated>2014-04-03T06:00:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-history-object</id>
    <content type="html"><![CDATA[<p>History用于窗体中的导航</p>

<h2>History对象</h2>

<ul>
<li><code>history</code>对象是<code>window</code>对象的属性</li>
<li>浏览者通常可以使用浏览器的前进与后退按钮访问曾经浏览过的页面。<code>JavaScript</code>的<code>history</code>对象记录了用户曾经浏览过的页面，并可以实现浏览器前进与后退相似的导航功能</li>
<li>可以通过<code>back</code>函数后退一个页面，<code>forward</code>函数前进一个页面，或者使用<code>go</code>函数任意后退或前进页面，还可以通过<code>length</code>属性查看<code>history</code>对象中存储的页面数</li>
</ul>


<h2>History对象函数</h2>

<ul>
<li><code>JavaScript</code> <code>history.go()</code> 函数 &mdash; 前进或后退指定的页面数</li>
<li><code>JavaScript</code> <code>history.back()</code> 函数 &mdash; 后退一页</li>
<li><code>JavaScript</code> <code>history.forward()</code> 函数 &mdash; 前进一页</li>
</ul>


<h2>History对象属性</h2>

<ul>
<li><code>JavaScript</code> <code>length</code> 属性 &mdash; <code>history</code>对象中缓存了多少个<code>URL</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之frames对象]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-frames-object/"/>
    <updated>2014-04-03T05:35:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-frames-object</id>
    <content type="html"><![CDATA[<p>Frames用于表现HTML页面当前窗体的中的框架集合</p>

<h2>Frames对象</h2>

<ul>
<li><code>frames</code>对象是<code>window</code>对象的属性</li>
<li>如果页面使用框架，将产生一个框架集合<code>frames</code>，在集合中可用数字(从0开始，从左到右，逐行索引)或名字索引框架</li>
</ul>


<h2>框架集引用中使用的对象</h2>

<table>
<thead>
<tr>
<th align="left">对象 </th>
<th align="left"> 位置</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">window </td>
<td align="left"> 当前框架</td>
</tr>
<tr>
<td align="left">top </td>
<td align="left"> 最顶层的框架，就是浏览器窗体</td>
</tr>
<tr>
<td align="left">parent </td>
<td align="left"> 包含当前框架的父框架</td>
</tr>
<tr>
<td align="left">self </td>
<td align="left"> 当前框架，总是等于window对象</td>
</tr>
</tbody>
</table>


<h2>示例</h2>

<p>
```html
<frameset rows="20%, *, 20%"></p>

<pre><code>    &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="top" /&gt;
    &lt;frameset cols="20%, *"&gt;
            &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="left" /&gt;
            &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.right/" name="right" /&gt;
    &lt;/frameset&gt;
    &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="bottom" /&gt;
</code></pre>

<p></frameset>
```
</p>

<p>上面的框架页示例产生了一个框架集</p>

<p><code>window</code>与<code>self</code>代表相同的对象，但是<code>self</code>是为了确定正在使用的框架不是<code>parent</code>，而是自身,<code>top</code>对象代表最顶层框架，浏览器窗体本身，因此在这个例子中就等于<code>window</code>对象,如果页面上没有框架，<code>window</code>，<code>self</code>都等于<code>top</code>，并且框架集合的长度为0</p>

<p>如果框架名称为<code>right</code>的页面包括下面框架：</p>

<p>&lt;% raw %>
```html
<frameset cols="50%, *"></p>

<pre><code>    &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="righttop" /&gt;
    &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="rightbottom" /&gt;
</code></pre>

<p></frameset>
```
&lt;% endraw %></p>

<p>那么righttop与rightbottom的parent父框架为right</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之document对象]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/01/learn-javastript-bom-base-document-object/"/>
    <updated>2014-04-01T15:35:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/01/learn-javastript-bom-base-document-object</id>
    <content type="html"><![CDATA[<p>Document用于表现HTML页面当前窗体的内容</p>

<h2>Document对象</h2>

<ul>
<li><code>document</code>是<code>BOM</code>中最重要对象之一</li>
<li><code>document</code>对象是<code>window</code>对象的属性</li>
<li><code>document</code>对象包含一个节点对象，此对象包含每个单独页面的所有<code>HTML</code>元素，这就是W3C的<code>DOM</code>对象</li>
</ul>


<h2>Document属性</h2>

<ul>
<li><code>cookie</code> &mdash;   用户<code>cookie</code></li>
<li><code>title</code>   &mdash;  当前页面<code>title</code>标签中定义的文字</li>
<li><code>URL</code> &mdash;  当前页面的<code>URL</code></li>
</ul>


<p>下面内容的不建议使用</p>

<ul>
<li><code>alinkColor</code>  &mdash;  代表<code>HTML body</code>标签的<code>alink</code>属性</li>
<li><code>bgColor</code> &mdash;  代表<code>HTML body</code>标签的<code>bgcolor</code>属性</li>
<li><code>fgColor</code> &mdash;  代表<code>HTML body</code>标签的<code>text</code>属性</li>
<li><code>linkColor</code> &mdash;    代表<code>HTML body</code>标签的<code>link</code>属性</li>
<li><code>vlinkColor</code>  &mdash;  代表<code>HTML body</code>标签的<code>vlink</code>属性</li>
<li><code>lastModified</code>    &mdash; 页面最后修改的日期字符串，可以使用<code>Date</code>的构造函数转换为日期，例如：<code>new Date(document.lastModified);</code></li>
<li><code>referrer</code>    &mdash;  浏览器<code>history</code>中后退一个位置的<code>URL</code></li>
</ul>


<p>由于document代表HTML文档的内容，因此可以通过它表示文档中加载的一些元素，这些元素全部通过集合访问。</p>

<ul>
<li><code>anchors</code> &mdash;  文档中所有锚(a name=&ldquo;aname&rdquo;)的集合</li>
<li><code>applets</code> &mdash;  文档中所有<code>applet</code>标签表示的内容的集合</li>
<li><code>embeds</code>  &mdash;  文档中所有<code>embed</code>标签表示的内容的集合</li>
<li><code>forms</code>   &mdash;  文档中所有<code>form</code>标签表示的内容的集合</li>
<li><code>images</code>  &mdash;  文档中所有<code>image</code>标签表示的内容的集合</li>
<li><code>links</code>   &mdash; 文档中所有<code>a</code>(链接)标签表示的内容的集合</li>
</ul>


<h2>Document函数</h2>

<ul>
<li><code>JavaScript</code> <code>write()</code> 函数</li>
<li><code>JavaScript</code> <code>writeln()</code> 函数</li>
<li><code>JavaScript</code> <code>document.open()</code> 函数</li>
<li><code>JavaScript</code> <code>document.close()</code> 函数</li>
</ul>


<h2>使用document索引页面内的元素</h2>

<p>可以使用数字或名称索引页面中的元素集合，每个元素的属性都变成了集合中相应对象的属性。</p>

<p></p>

<p>```html
<form name="form1"><a href="http://www.dreamdu.com/xhtml/" name="a1">xhtml</a></form>
<form name="form2"><a href="http://www.dreamdu.com/css/" name="a2">css</a></form>
<form name="form3"><a href="http://www.dreamdu.com/javascript/" name="a3">javascript</a></form></p>

<p><input type="button" value="显示第二个表单的名称" onclick="alert(document.forms[1].name)" />
<input type="button" value="显示第二个表单的名称第二种方法" onclick="alert(document.forms['form2'].name)" />
<input type="button" value="显示第三个链接的名称" onclick="alert(document.links[2].name)" />
<input type="button" value="显示第三个链接的名称第二种方法" onclick="alert(document.links['a3'].name)" />
<input type="button" value="显示第三个链接href属性的值" onclick="alert(document.links[2].href)" />
```</p>

<p></p>

<p>表示第二个表单的方法：<code>document.forms[1]或document.forms["form2"]</code></p>

<p>表示第三个链接的方法：<code>document.links[2]或document.links["a3"]</code></p>

<p>表示第三个链接<code>href</code>属性的方法：<code>document.links[2].href</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之window对象]]></title>
    <link href="http://blog.dofa.org/blog/2014/03/31/learn-javastript-bom-base-window-object/"/>
    <updated>2014-03-31T15:26:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/03/31/learn-javastript-bom-base-window-object</id>
    <content type="html"><![CDATA[<h2>什么是 <code>BOM</code></h2>

<ul>
<li><code>BOM</code>是<code>browser object model</code>的缩写，简称浏览器对象模型</li>
<li><code>BOM</code>提供了独立于内容而与浏览器窗口进行交互的对象</li>
<li>由于<code>BOM</code>主要用于管理窗口与窗口之间的通讯，因此其核心对象是<code>window</code></li>
<li><code>BOM</code>由一系列相关的对象构成，并且每个对象都提供了很多方法与属性</li>
<li><code>BOM</code>缺乏标准，<code>JavaScript</code>语法的标准化组织是<code>ECMA</code>，<code>DOM</code>的标准化组织是<code>W3C</code></li>
<li><code>BOM</code>最初是<code>Netscape</code>浏览器标准的一部分</li>
</ul>


<h2>BOM结构图</h2>

<p><img src="http://dofa.u.qiniudn.com/image/web/browser_objects.png"></p>

<p>window对象是BOM的顶层(核心)对象，所有对象都是通过它延伸出来的，也可以称为window的子对象。</p>

<p>由于window是顶层对象，因此调用它的子对象时可以不显示的指明window对象，例如下面两行代码是一样的：</p>

<pre><code>document.write("blog.dofa.org");
window.document.write("blog.dofa.org");
</code></pre>

<h2>全局的window对象</h2>

<p>window对象是BOM中所有对象的核心</p>

<h4>JavaScript中的任何一个全局函数或变量都是window的属性</h4>

<pre><code>var sTest="dofa";
document.write(sTest==window.sTest);
</code></pre>

<p>结果：</p>

<pre><code>true    
</code></pre>

<p>由于sTest是全局变量，因此可以通过window.sTest访问这个变量</p>

<h4>window与self对象</h4>

<p>self对象与window对象完全相同，self通常用于确认就是在当前的窗体内</p>

<h4>window的子对象</h4>

<ul>
<li>JavaScript document 对象</li>
<li>JavaScript frames 对象</li>
<li>JavaScript history 对象</li>
<li>JavaScript location 对象</li>
<li>JavaScript navigator 对象</li>
<li>JavaScript screen 对象</li>
</ul>

]]></content>
  </entry>
  
</feed>
