<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: BOM | Do Far]]></title>
  <link href="http://blog.dofa.org/tags/bom/atom.xml" rel="self"/>
  <link href="http://blog.dofa.org/"/>
  <updated>2014-04-03T15:04:20+00:00</updated>
  <id>http://blog.dofa.org/</id>
  <author>
    <name><![CDATA[dofa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之screen对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/04/learn-javastript-bom-base-screen-object/"/>
    <updated>2014-04-04T04:57:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/04/learn-javastript-bom-base-screen-object</id>
    <content type="html"><![CDATA[<p>screen对象用于获取用户的屏幕信息</p>

<h2>Screen对象</h2>

<ul>
<li><code>Screen</code>对象是<code>window</code>对象的属性</li>
</ul>


<h2>Screen对象属性</h2>

<ul>
<li><code>JavaScript</code> <code>availHeight</code> 属性 &mdash;  窗口可以使用的屏幕高度，单位像素</li>
<li><code>JavaScript</code> <code>availWidth</code> 属性  &mdash;  窗口可以使用的屏幕宽度，单位像素</li>
<li><code>JavaScript</code> <code>colorDepth</code> 属性  &mdash;  用户浏览器表示的颜色位数，通常为32位(每像素的位数)</li>
<li><code>JavaScript</code> <code>pixelDepth</code> 属性  &mdash;  用户浏览器表示的颜色位数，通常为32位(每像素的位数)（<code>IE</code>不支持此属性）</li>
<li><code>JavaScript</code> <code>height</code> 属性  &mdash;  屏幕的高度，单位像素</li>
<li><code>JavaScript</code> <code>width</code> 属性   &mdash;  屏幕的宽度，单位像素</li>
</ul>


<p><code>availWidth</code>与<code>availHeight</code>属性非常有用，例如：可以使用下面的代码填充用户的屏幕：</p>

<pre><code>window.moveTo(0,0);
window.resizeTo(screen.availWidth, screen.availHeight);
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之navigator对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/04/learn-javastript-bom-base-navigator-object/"/>
    <updated>2014-04-04T04:52:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/04/learn-javastript-bom-base-navigator-object</id>
    <content type="html"><![CDATA[<p>navigator对象通常用于检测浏览器与操作系统的版本</p>

<h2>Navigator对象</h2>

<ul>
<li><code>navigator</code>对象是<code>window</code>对象的属性</li>
<li>由于<code>navigator</code>没有统一的标准，因此各个浏览器都有自己不同的<code>navigator</code>版本，这里只介绍最普遍支持且最常用的</li>
</ul>


<h2>常用的navigator属性</h2>

<ul>
<li><code>appCodeName</code> &mdash;  浏览器代码名的字符串表示</li>
<li><code>appName</code> &mdash;  官方浏览器名的字符串表示</li>
<li><code>appVersion</code>  &mdash;  浏览器版本信息的字符串表示</li>
<li><code>cookieEnabled</code>   &mdash;  如果启用<code>cookie</code>返回<code>true</code>，否则返回<code>false</code></li>
<li><code>javaEnabled</code> &mdash;  如果启用<code>java</code>返回<code>true</code>，否则返回<code>false</code></li>
<li><code>platform</code>    &mdash;  浏览器所在计算机平台的字符串表示</li>
<li><code>plugins</code> &mdash;  安装在浏览器中的插件数组</li>
<li><code>taintEnabled</code>    &mdash;  如果启用了数据污点返回<code>true</code>，否则返回<code>false</code></li>
<li><code>userAgent</code>   &mdash;  用户代理头的字符串表示</li>
</ul>


<p><code>navigator</code>中最重要的是<code>userAgent</code>属性，返回包含浏览器版本等信息的字符串，其次<code>cookieEnabled</code>也很重要，使用它可以判断用户浏览器是否开启<code>cookie</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之location对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-location-object/"/>
    <updated>2014-04-03T06:10:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-location-object</id>
    <content type="html"><![CDATA[<p>Location用于获取或设置窗体的URL，并且可以用于解析URL，是BOM中最重要的对象之一</p>

<h2>Location对象</h2>

<ul>
<li><code>Location</code>既是<code>window</code>对象的属性又是<code>document</code>对象的属性</li>
<li><code>location</code>包含8个属性，其中7个都是当前窗体的<code>URL</code>的一部分，剩下的也是最重要的一个是<code>href</code>属性，代表当前窗体的<code>URL</code></li>
<li><code>location</code>的8个属性都是可读写的，但是只有<code>href</code>与<code>hash</code>的写才有意义。例如改变<code>location.href</code>会重新定位到一个<code>URL</code>，而修改<code>location.hash</code>会跳到当前页面中的<code>anchor(&lt;a id="name"&gt;</code>或者<code>&lt;div id="id"&gt;</code>等)名字的标记(如果有)，而且页面不会被重新加载</li>
</ul>


<h2>示例</h2>

<pre><code>document.write(window.location==document.location);
</code></pre>

<h2>Location对象属性图示</h2>

<p><img src="http://dofa.u.qiniudn.com/image/web/window_location.png"></p>

<p>location属性</p>

<ul>
<li><code>JavaScript</code> <code>hash</code> 属性    &mdash;  返回<code>URL</code>中<code>#</code>符号后面的内容</li>
<li><code>JavaScript</code> <code>host</code> 属性    &mdash;  返回域名</li>
<li><code>JavaScript</code> <code>hostname</code> 属性    &mdash;  返回主域名</li>
<li><code>JavaScript</code> <code>href</code> 属性    &mdash;  返回当前文档的完整<code>URL</code>或设置当前文档的<code>URL</code></li>
<li><code>JavaScript</code> <code>pathname</code> 属性    &mdash;  返回<code>URL</code>中域名后的部分</li>
<li><code>JavaScript</code> <code>port</code> 属性    &mdash;  返回<code>URL</code>中的端口</li>
<li><code>JavaScript</code> <code>protocol</code> 属性    &mdash;  返回<code>URL</code>中的协议</li>
<li><code>JavaScript</code> <code>search</code> 属性  &mdash;  返回<code>URL</code>中的查询字符串</li>
<li><code>JavaScript</code> <code>assign()</code>   函数 &mdash;   设置当前文档的<code>URL</code></li>
<li><code>JavaScript</code> <code>replace()</code> 函数 &mdash;    设置当前文档的<code>URL</code>，并在<code>history</code>对象的地址列表中删除这个<code>URL</code></li>
<li><code>JavaScript</code> <code>reload()</code>   函数 &mdash;   重新载入当前文档(从<code>server</code>服务器端)</li>
<li><code>JavaScript</code> <code>toString()</code> 函数 &mdash;   返回<code>location</code>对象<code>href</code>属性当前的值</li>
</ul>


<p>Note: 主域名是不带www的域名，例如dreamdu.com，主域名前面带前缀的通常都为二级域名或多级域名，例如www.dreamdu.com其实是二级域名。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之history对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-history-object/"/>
    <updated>2014-04-03T06:00:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-history-object</id>
    <content type="html"><![CDATA[<p>History用于窗体中的导航</p>

<h2>History对象</h2>

<ul>
<li><code>history</code>对象是<code>window</code>对象的属性</li>
<li>浏览者通常可以使用浏览器的前进与后退按钮访问曾经浏览过的页面。<code>JavaScript</code>的<code>history</code>对象记录了用户曾经浏览过的页面，并可以实现浏览器前进与后退相似的导航功能</li>
<li>可以通过<code>back</code>函数后退一个页面，<code>forward</code>函数前进一个页面，或者使用<code>go</code>函数任意后退或前进页面，还可以通过<code>length</code>属性查看<code>history</code>对象中存储的页面数</li>
</ul>


<h2>History对象函数</h2>

<ul>
<li><code>JavaScript</code> <code>history.go()</code> 函数 &mdash; 前进或后退指定的页面数</li>
<li><code>JavaScript</code> <code>history.back()</code> 函数 &mdash; 后退一页</li>
<li><code>JavaScript</code> <code>history.forward()</code> 函数 &mdash; 前进一页</li>
</ul>


<h2>History对象属性</h2>

<ul>
<li><code>JavaScript</code> <code>length</code> 属性 &mdash; <code>history</code>对象中缓存了多少个<code>URL</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript学习--BOM基础之frames对象(转)]]></title>
    <link href="http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-frames-object/"/>
    <updated>2014-04-03T05:35:06+00:00</updated>
    <id>http://blog.dofa.org/blog/2014/04/03/learn-javastript-bom-base-frames-object</id>
    <content type="html"><![CDATA[<p>Frames用于表现HTML页面当前窗体的中的框架集合</p>

<h2>Frames对象</h2>

<ul>
<li><code>frames</code>对象是<code>window</code>对象的属性</li>
<li>如果页面使用框架，将产生一个框架集合<code>frames</code>，在集合中可用数字(从0开始，从左到右，逐行索引)或名字索引框架</li>
</ul>


<h2>框架集引用中使用的对象</h2>

<table>
<thead>
<tr>
<th align="left">对象 </th>
<th align="left"> 位置</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">window </td>
<td align="left"> 当前框架</td>
</tr>
<tr>
<td align="left">top </td>
<td align="left"> 最顶层的框架，就是浏览器窗体</td>
</tr>
<tr>
<td align="left">parent </td>
<td align="left"> 包含当前框架的父框架</td>
</tr>
<tr>
<td align="left">self </td>
<td align="left"> 当前框架，总是等于window对象</td>
</tr>
</tbody>
</table>


<h2>示例</h2>

<p>
```html
<frameset rows="20%, *, 20%"></p>

<pre><code>    &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="top" /&gt;
    &lt;frameset cols="20%, *"&gt;
            &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="left" /&gt;
            &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.right/" name="right" /&gt;
    &lt;/frameset&gt;
    &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="bottom" /&gt;
</code></pre>

<p></frameset>
```
</p>

<p>上面的框架页示例产生了一个框架集</p>

<p><code>window</code>与<code>self</code>代表相同的对象，但是<code>self</code>是为了确定正在使用的框架不是<code>parent</code>，而是自身,<code>top</code>对象代表最顶层框架，浏览器窗体本身，因此在这个例子中就等于<code>window</code>对象,如果页面上没有框架，<code>window</code>，<code>self</code>都等于<code>top</code>，并且框架集合的长度为0</p>

<p>如果框架名称为<code>right</code>的页面包括下面框架：</p>

<p>&lt;% raw %>
```html
<frameset cols="50%, *"></p>

<pre><code>    &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="righttop" /&gt;
    &lt;frame src="http://www.dreamdu.com/javascript/exe_window.frames.top/" name="rightbottom" /&gt;
</code></pre>

<p></frameset>
```
&lt;% endraw %></p>

<p>那么righttop与rightbottom的parent父框架为right</p>
]]></content>
  </entry>
  
</feed>
